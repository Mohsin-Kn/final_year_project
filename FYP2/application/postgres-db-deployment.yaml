apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert -f docker-compose.yml
    kompose.version: 1.32.0 (765fde254)
  labels:
    io.kompose.service: postgres-db
  name: postgres-db
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: postgres-db
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert -f docker-compose.yml
        kompose.version: 1.32.0 (765fde254)
      labels:
        io.kompose.network/clamp-fyp-default: "true"
        io.kompose.service: postgres-db
    spec:
      containers:
        - env:
            - name: DB_NAME
              valueFrom:
                configMapKeyRef:
                  key: DB_NAME
                  name: env
            - name: DB_PASSWORD
              valueFrom:
                configMapKeyRef:
                  key: DB_PASSWORD
                  name: env
            - name: DB_USER
              valueFrom:
                configMapKeyRef:
                  key: DB_USER
                  name: env
            - name: POSTGRES_DB
              valueFrom:
                configMapKeyRef:
                  key: POSTGRES_DB
                  name: env
            - name: POSTGRES_HOST
              valueFrom:
                configMapKeyRef:
                  key: POSTGRES_HOST
                  name: env
            - name: POSTGRES_PASSWORD
              valueFrom:
                configMapKeyRef:
                  key: POSTGRES_PASSWORD
                  name: env
            - name: POSTGRES_PORT
              valueFrom:
                configMapKeyRef:
                  key: POSTGRES_PORT
                  name: env
            - name: POSTGRES_USER
              valueFrom:
                configMapKeyRef:
                  key: POSTGRES_USER
                  name: env
          image: postgres:15
          livenessProbe:
                    exec:
                      command:
                        - /usr/bin/pg_isready
                        - -U
                        - postgres
                        - -d
                        - clamp_db
                    initialDelaySeconds: 30
                    periodSeconds: 10
                    failureThreshold: 5
          name: postgres-db
          ports:
            - containerPort: 5432
              hostPort: 5433
              protocol: TCP
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: postgres-data
      restartPolicy: Always
      volumes:
        - name: postgres-data
          persistentVolumeClaim:
            claimName: postgres-data



  # livenessProbe:
  #           exec:
  #             command:
  #               - 'pg_isready -U '
  #           failureThreshold: 5
  #           periodSeconds: 5
  #           timeoutSeconds: 5