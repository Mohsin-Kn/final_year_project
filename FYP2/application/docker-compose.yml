version: "3.8"

services:
  postgres_db:
    image: postgres:15
    container_name: postgres_db
    restart: always
    env_file:
      - .env
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 5s
      timeout: 5s
      retries: 5

  auth-service:
    image: auth-service
    container_name: auth-service
    build: 
      context: ./auth_service
      dockerfile: Dockerfile
    environment:
      - DJANGO_SETTINGS_MODULE=auth_service.settings
    depends_on:
      postgres_db:
        condition: service_healthy
    env_file:
      - .env  # Provides database credentials to Django settings
    ports:
      - "8000:8000"

  institutes-service:
    image: institutes-service
    container_name: institutes-service
    build:
      context: ./institutes_service
      dockerfile: Dockerfile
    environment:
      - DJANGO_SETTINGS_MODULE=institutes_service.settings
    depends_on:
      postgres_db:
        condition: service_healthy
    env_file:
      - .env
    ports:
      - "8001:8001"  # Expose port 8001 to the host

  courses-service:
    image: courses-service
    container_name: courses-service
    build:
      context: ./courses_service
      dockerfile: Dockerfile
    environment:
      - DJANGO_SETTINGS_MODULE=courses_service.settings
    depends_on:
      postgres_db:
        condition: service_healthy
    env_file:
      - .env
    ports:
      - "8002:8002"

  resources-service:
    image: resources-service
    container_name: resources-service
    build:
      context: ./resources_service
      dockerfile: Dockerfile
    environment:
      - DJANGO_SETTINGS_MODULE=resources_service.settings
    depends_on:
      postgres_db:
        condition: service_healthy
    env_file:
      - .env
    ports:
      - "8003:8003"

  frontend:
    image: frontend
    container_name: frontend
    build: 
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    depends_on:
      - auth-service
      - institutes-service
      - courses-service
      - resources-service
    env_file:
      - ./frontend/.env  # Loads frontend environment variables


volumes:
  postgres_data:
